<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>聊天室</title>
    <%- include common %>
    <style>
        #chatroom {
            width: 360px;
            height: 490px;
            border: 2px solid darkorchid;
            border-radius: 6px;
            margin-bottom: 20px;
            overflow: auto;
        }
    </style>
</head>

<body>
    <%- include("head", {title:'chat'}) %>
    <h2>聊天室</h2>
    <div id="chatroom">
        <!-- 接受聊天信息 -->
    </div>
    <div>
        <input type="text" placeholder="请输入聊天内容" id="word">
        <input type="button" value="发送内容" id="sendbtn">
    </div>
</body>
<script>
     // 客户端的 代码 
        // ## 客户端 socket 功能 
        // 1. 创建 客户端 socket 

        const ws = new WebSocket("ws://localhost:3900");   // WebScoket html5 新特性 

         // 2. 链接服务器 的 socket

         ws.onopen = function(){  
            // 输入昵称 
            ws.send("大家好,我是...");  // 发送一句话到 服务器 
        }


         // 3. 发送消息 给 服务器 
         function sendMsg(){
             console.log(word.value);
             ws.send(word.value);
             word.value = '';
         }
        
         sendbtn.onclick = sendMsg;

         document.onkeydown = function(e){
             if(e.keyCode == 13){
                sendMsg();
             }
         }
        
        // 4. 接收服务器发来的消息 
        ws.onmessage = function(data){
            console.log(data);
            document.getElementById("chatroom").innerHTML += `<p>${data.data}</p>`
        }


        ws.onclose = function(){
            console.log("服务器已经关闭")
        }
        ws.onerror = function(err){
            console.log("服务器出现异常 " + err)
        }
</script>

</html>